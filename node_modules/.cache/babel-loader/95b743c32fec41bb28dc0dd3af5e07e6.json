{"remainingRequest":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js!E:\\2023spring\\sci\\vue3-bigData\\src\\api\\chart.js","dependencies":[{"path":"E:\\2023spring\\sci\\vue3-bigData\\src\\api\\chart.js","mtime":1676359297052},{"path":"E:\\2023spring\\sci\\vue3-bigData\\babel.config.js","mtime":1676359297052},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js","mtime":1676359413493}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly/mnKzmnaXmg7PnlKhtb2Nr5qih5ouf5pWw5o2u55qE77yM5L2G5piv5Zyw5Zu+5pWw5o2u5LiN5aW95qih5ouf77yM54m55Yir5piv6L+Z6YeM6KaB5LiA57qn57qn5LiL6ZK7Ci8v5LiN5Y+v6IO95oqK5omA5pyJ55qE5biC5Y6/6YO95YaZ5LiK5Y6777yM6YKj5qC35Yqf6IO96YeP5aSq5aSn5LqG77yM5omA5Lul6L+Z6YeM55SocHJvbWlzZSAg5YGH6KOF5qih5ouf6LCD5o6l5Y+jCgppbXBvcnQgeyBnZXRNYXBJbmZvIH0gZnJvbSAiQC91dGlscyI7CgovKioNCiAqICDojrflj5bmnIDov5E15bm055qE5Z+O5biC6ZSA5ZSu6aKd5bqmICAgIOaooeaLn+aVsOaNru+8jOi/memHjHllYXLlsZ7mgKflsLHkuI3nlKjkuoYNCiAqICBAcGFyYW0ge3N0cmluZ30gIGFiY29kZSAg5Z+O5biCY29kZQ0KICogIEBwYXJhbSB7bnVtYmVyfSAgeWVhciAgICAgICDlubTku70NCiAqICBAcmV0dXJucyB7QXJyYXl9DQogKi8KZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdENpdHlEYXRhKHsKICBhYmNvZGUsCiAgeWVhcgp9ID0gcGFyYW1zKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgIGdldE1hcEluZm8oYWJjb2RlKS50aGVuKGRhdGEgPT4gewogICAgICBjb25zdCBtYXBEYXRhID0gZGF0YS5tYXAoaXRlbSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgIHZhbHVlOiAoTWF0aC5yYW5kb20oKSAqIDMwMDApLnRvRml4ZWQoMiksCiAgICAgICAgICBhZGNvZGU6IGl0ZW0uYWRjb2RlCiAgICAgICAgfTsKICAgICAgfSk7CiAgICAgIHJlc29sdmUoewogICAgICAgIGNvZGU6IDIwMCwKICAgICAgICBkYXRhOiBtYXBEYXRhCiAgICAgIH0pOwogICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICByZWplY3QoZXJyb3IpOwogICAgfSk7CiAgfSk7Cn0="},{"version":3,"names":["getMapInfo","selectCityData","abcode","year","params","Promise","resolve","reject","then","data","mapData","map","item","name","value","Math","random","toFixed","adcode","code","catch","error"],"sources":["E:/2023spring/sci/vue3-bigData/src/api/chart.js"],"sourcesContent":["//本来想用mock模拟数据的，但是地图数据不好模拟，特别是这里要一级级下钻\r\n//不可能把所有的市县都写上去，那样功能量太大了，所以这里用promise  假装模拟调接口\r\n\r\nimport { getMapInfo } from \"@/utils\";\r\n\r\n/**\r\n *  获取最近5年的城市销售额度    模拟数据，这里year属性就不用了\r\n *  @param {string}  abcode  城市code\r\n *  @param {number}  year       年份\r\n *  @returns {Array}\r\n */\r\nexport function selectCityData({ abcode, year } = params) {\r\n  return new Promise((resolve, reject) => {\r\n    getMapInfo(abcode)\r\n      .then((data) => {\r\n        const mapData = data.map((item) => {\r\n          return {\r\n            name: item.name,\r\n            value: (Math.random() * 3000).toFixed(2),\r\n            adcode: item.adcode,\r\n          };\r\n        });\r\n        resolve({\r\n          code: 200,\r\n          data: mapData,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,UAAU,QAAQ,SAAS;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,GAAGC,MAAM,EAAE;EACxD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCP,UAAU,CAACE,MAAM,CAAC,CACfM,IAAI,CAAEC,IAAI,IAAK;MACd,MAAMC,OAAO,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAK;QACjC,OAAO;UACLC,IAAI,EAAED,IAAI,CAACC,IAAI;UACfC,KAAK,EAAE,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC;UACxCC,MAAM,EAAEN,IAAI,CAACM;QACf,CAAC;MACH,CAAC,CAAC;MACFZ,OAAO,CAAC;QACNa,IAAI,EAAE,GAAG;QACTV,IAAI,EAAEC;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChBd,MAAM,CAACc,KAAK,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;AACJ"}]}