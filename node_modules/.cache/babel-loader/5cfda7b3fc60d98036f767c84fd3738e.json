{"remainingRequest":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js!E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\wordChart.vue?vue&type=template&id=64dbe5dc","dependencies":[{"path":"E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\wordChart.vue","mtime":1676359297068},{"path":"E:\\2023spring\\sci\\vue3-bigData\\babel.config.js","mtime":1676359297052},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js","mtime":1676359413493},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1676359414755},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1676359413934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKY29uc3QgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImNoYXJ0LXdyYXBwZXIiLAogIHJlZjogIndvcmRDaGFydCIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBudWxsLCA1MTIgLyogTkVFRF9QQVRDSCAqLyk7Cn0="},{"version":3,"mappings":";;EACOA,KAAK,EAAC,eAAe;EAACC,GAAG,EAAC;;;uBAA/BC,oBAAiD,OAAjDC,UAAiD","names":["class","ref","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\wordChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\" ref=\"wordChart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts\";\r\nrequire(\"echarts-wordcloud\");\r\nimport { onMounted, onBeforeUnmount, ref, watch, routerChange } from \"vue\";\r\nimport { debounce } from \"@/utils/index.js\";\r\nimport useResize from \"@/componentApi/useResize.js\";\r\nimport { selectWordData } from \"@/api/mockChart\";\r\n\r\nexport default {\r\n  name: \"wordChart\",\r\n  setup() {\r\n    let { abcode, year, parentInfo, routerChange } = useResize();\r\n\r\n    const wordChart = ref(null);\r\n    let myChart = ref(null);\r\n\r\n    const resizeHandler = debounce(() => {\r\n      if (myChart) {\r\n        myChart.resize();\r\n      }\r\n    }, 200);\r\n\r\n    onMounted(() => {\r\n      getWordData();\r\n      window.addEventListener(\"resize\", resizeHandler);\r\n    });\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    });\r\n\r\n    //模拟接口，获取echarts数据\r\n    const getWordData = async () => {\r\n      const { data } = await selectWordData({\r\n        abcode,\r\n        year,\r\n      });\r\n      initEcharts(data);\r\n    };\r\n\r\n    // //渲染echarts图\r\n    const initEcharts = (data) => {\r\n      const colorList = [\"#28CAD8\", \"#E5A214\", \"#01D2D1\", \"#F69F73\", \"#39E569\"];\r\n      myChart = echarts.init(wordChart.value);\r\n      myChart.setOption(\r\n        {\r\n          title: {\r\n            show: data.length === 0,\r\n            top: \"center\",\r\n            left: \"center\",\r\n            text: \"暂无数据\",\r\n            textStyle: {\r\n              color: \"rgb(179, 239, 255)\",\r\n              fontSize: 12,\r\n            },\r\n          },\r\n          tooltip: {\r\n            trigger: \"item\",\r\n            formatter: \"销量 <br/>{b} : {c} 万\",\r\n            textStyle: {\r\n              fontSize: 12,\r\n            },\r\n          },\r\n          toolbox: {\r\n            feature: {\r\n              dataView: {\r\n                show: false,\r\n              },\r\n              magicType: {\r\n                show: false,\r\n              },\r\n              restore: {\r\n                show: false,\r\n              },\r\n              saveAsImage: {\r\n                show: true,\r\n                name: year.value + \"销售品牌\",\r\n                pixelRatio: 2,\r\n              },\r\n            },\r\n            iconStyle: {\r\n              normal: {\r\n                borderColor: \"#1990DA\",\r\n              },\r\n            },\r\n            top: 0,\r\n            right: 5,\r\n          },\r\n          series: [\r\n            {\r\n              type: \"wordCloud\",\r\n              sizeRange: [12, 26],\r\n              rotationRange: [0, 0],\r\n              textStyle: {\r\n                normal: {\r\n                  color: (params) => {\r\n                    return colorList[\r\n                      Math.floor(Math.random() * colorList.length)\r\n                    ];\r\n                  },\r\n                },\r\n              },\r\n              data: data,\r\n            },\r\n          ],\r\n        },\r\n        true\r\n      );\r\n\r\n      myChart.off(\"click\");\r\n      myChart.on(\"click\", () => {\r\n        routerChange(\"/more\");\r\n      });\r\n    };\r\n\r\n    watch(\r\n      year,\r\n      (nl, ol) => {\r\n        getWordData();\r\n      },\r\n      { lazy: false }\r\n    );\r\n\r\n    watch(\r\n      parentInfo,\r\n      (nl, ol) => {\r\n        getWordData();\r\n      },\r\n      { lazy: false, deep: true }\r\n    );\r\n\r\n    return {\r\n      wordChart,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"]}]}