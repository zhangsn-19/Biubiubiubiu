{"remainingRequest":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js!E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\liquidChart.vue?vue&type=template&id=7e9eb9a0","dependencies":[{"path":"E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\liquidChart.vue","mtime":1676367314898},{"path":"E:\\2023spring\\sci\\vue3-bigData\\babel.config.js","mtime":1676359297052},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js","mtime":1676359413493},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1676359414755},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1676359413934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKY29uc3QgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImNoYXJ0LXdyYXBwZXIiLAogIHJlZjogImxpcXVpZENoYXJ0Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIG51bGwsIDUxMiAvKiBORUVEX1BBVENIICovKTsKfQ=="},{"version":3,"mappings":";;EACOA,KAAK,EAAC,eAAe;EAACC,GAAG,EAAC;;;uBAA/BC,oBAAmD,OAAnDC,UAAmD","names":["class","ref","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\liquidChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\" ref=\"liquidChart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts\";\r\nrequire(\"echarts-liquidfill\");\r\nimport { onMounted, onBeforeUnmount, ref, watch } from \"vue\";\r\nimport { debounce } from \"@/utils/index.js\";\r\nimport useResize from \"@/componentApi/useResize.js\";\r\nimport { selectYearValue } from \"@/api/mockChart\";\r\n\r\nexport default {\r\n  name: \"liquidChart\",\r\n  setup() {\r\n    let { abcode, year, parentInfo, routerChange } = useResize();\r\n\r\n    const liquidChart = ref(null);\r\n    let myChart = ref(null);\r\n\r\n    const resizeHandler = debounce(() => {\r\n      if (myChart) {\r\n        myChart.resize();\r\n      }\r\n    }, 200);\r\n\r\n    onMounted(() => {\r\n      getChartData();\r\n      window.addEventListener(\"resize\", resizeHandler);\r\n    });\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    });\r\n\r\n    //模拟接口，获取echarts数据\r\n    const getChartData = async () => {\r\n      const { data } = await selectYearValue({\r\n        year,\r\n      });\r\n\r\n      initEcharts(data.value);\r\n    };\r\n\r\n    //渲染echarts图\r\n    const initEcharts = (data) => {\r\n      myChart = echarts.init(liquidChart.value);\r\n      myChart.setOption(\r\n        {\r\n          series: [\r\n            {\r\n              type: \"liquidFill\",\r\n              radius: \"85%\",\r\n              center: [\"50%\", \"45%\"],\r\n              data: [0.48, 0.48, 0.48, 0.48],\r\n              backgroundStyle: {\r\n                color: {\r\n                  type: \"linear\",\r\n                  x: 1,\r\n                  y: 0,\r\n                  x2: 0.5,\r\n                  y2: 1,\r\n                  colorStops: [\r\n                    {\r\n                      offset: 1,\r\n                      color: \"rgba(68, 145, 253, 0.55)\",\r\n                    },\r\n                    {\r\n                      offset: 0.5,\r\n                      color: \"rgba(68, 145, 253, 0.65)\",\r\n                    },\r\n                    {\r\n                      offset: 0,\r\n                      color: \"rgba(68, 145, 253, 1)\",\r\n                    },\r\n                  ],\r\n                  globalCoord: false,\r\n                },\r\n              },\r\n              outline: {\r\n                borderDistance: 0,\r\n                itemStyle: {\r\n                  borderWidth: 5,\r\n                  borderColor: {\r\n                    type: \"linear\",\r\n                    x: 0,\r\n                    y: 0,\r\n                    x2: 0,\r\n                    y2: 1,\r\n                    colorStops: [\r\n                      {\r\n                        offset: 0,\r\n                        color: \"rgba(53,142,215, 0)\",\r\n                      },\r\n                      {\r\n                        offset: 0.5,\r\n                        color: \"rgba(53,142,215, 0.45)\",\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: \"rgba(53,142,215, 0.9)\",\r\n                      },\r\n                    ],\r\n                    globalCoord: false,\r\n                  },\r\n                  shadowBlur: 10,\r\n                  shadowColor: \"rgba(53,142,215, 0.9)\",\r\n                },\r\n              },\r\n              label: {\r\n                normal: {\r\n                  formatter: data + \"万\",\r\n                  textStyle: {\r\n                    fontSize: 18,\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        true\r\n      );\r\n\r\n      myChart.off(\"click\");\r\n      myChart.on(\"click\", () => {\r\n        routerChange(\"/more\");\r\n      });\r\n    };\r\n\r\n    watch(\r\n      year,\r\n      (nl, ol) => {\r\n        getChartData();\r\n      },\r\n      { lazy: false }\r\n    );\r\n\r\n    watch(\r\n      parentInfo,\r\n      (nl, ol) => {\r\n        getChartData();\r\n      },\r\n      { lazy: false, deep: true }\r\n    );\r\n\r\n    return {\r\n      liquidChart,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"]}]}