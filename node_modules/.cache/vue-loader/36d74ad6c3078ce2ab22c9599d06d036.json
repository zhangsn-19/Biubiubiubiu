{"remainingRequest":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\2023spring\\sci\\vue3-bigData\\src\\views\\more\\components\\treeChart.vue?vue&type=template&id=0b963c77","dependencies":[{"path":"E:\\2023spring\\sci\\vue3-bigData\\src\\views\\more\\components\\treeChart.vue","mtime":1676359297068},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js","mtime":1676359413493},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1676359414755},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1676359413934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9ImNoYXJ0LXdyYXBwZXIiIHJlZj0idHJlZUNoYXJ0Ij48L2Rpdj4NCg=="},{"version":3,"sources":["E:\\2023spring\\sci\\vue3-bigData\\src\\views\\more\\components\\treeChart.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"E:/2023spring/sci/vue3-bigData/src/views/more/components/treeChart.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\" ref=\"treeChart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts\";\r\nimport { onMounted, onBeforeUnmount, ref } from \"vue\";\r\nimport { debounce } from \"@/utils/index.js\";\r\n\r\nexport default {\r\n  name: \"treeChart\",\r\n  setup() {\r\n    const treeChart = ref(null);\r\n    let myChart = ref(null);\r\n\r\n    const resizeHandler = debounce(() => {\r\n      if (myChart) {\r\n        myChart.resize();\r\n      }\r\n    }, 200);\r\n\r\n    onMounted(() => {\r\n      initEcharts();\r\n      window.addEventListener(\"resize\", resizeHandler);\r\n    });\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    });\r\n\r\n    //渲染echarts图\r\n    const initEcharts = () => {\r\n      const data = [\r\n        {\r\n          name: \"Vue\",\r\n          value: 6000,\r\n        },\r\n        {\r\n          name: \"React\",\r\n          value: 6600,\r\n        },\r\n        {\r\n          name: \"Angular\",\r\n          value: 3200,\r\n        },\r\n        {\r\n          name: \"uni-app\",\r\n          value: 2100,\r\n        },\r\n        {\r\n          name: \"mpvue\",\r\n          value: 172,\r\n        },\r\n        {\r\n          name: \"Taro\",\r\n          value: 179,\r\n        },\r\n        {\r\n          name: \"element-ui\",\r\n          value: 293,\r\n        },\r\n        {\r\n          name: \"vant\",\r\n          value: 200,\r\n        },\r\n      ];\r\n      const colorList = [\r\n        \"#6FFFFF\",\r\n        \"#FF9244\",\r\n        \"#7155B7\",\r\n        \"#0FE7E7\",\r\n        \"#48C7F2\",\r\n        \"#4490FF\",\r\n      ];\r\n      myChart = echarts.init(treeChart.value);\r\n      myChart.setOption({\r\n        color: colorList,\r\n        title: {\r\n          show: false,\r\n        },\r\n        tooltip: {},\r\n        series: [\r\n          {\r\n            name: \"矩形树图\",\r\n            type: \"treemap\",\r\n            roam: false,\r\n            label: {\r\n              show: true,\r\n              formatter: \"{b}\",\r\n              fontSize: 14,\r\n            },\r\n            nodeClick: false,\r\n            breadcrumb: {\r\n              show: false,\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: \"#d5dfe8\",\r\n                  fontSize: 14,\r\n                },\r\n                borderWidth: 0,\r\n              },\r\n              emphasis: {\r\n                label: {\r\n                  show: true,\r\n                },\r\n              },\r\n            },\r\n            data: data,\r\n          },\r\n        ],\r\n      });\r\n    };\r\n\r\n    return {\r\n      treeChart,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"]}]}