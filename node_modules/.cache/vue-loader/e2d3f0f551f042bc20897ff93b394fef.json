{"remainingRequest":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\scatterMap.vue?vue&type=template&id=23975c90","dependencies":[{"path":"E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\scatterMap.vue","mtime":1676359297068},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\babel-loader\\lib\\index.js","mtime":1676359413493},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1676359414755},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676359411943},{"path":"E:\\2023spring\\sci\\vue3-bigData\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1676359413934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9ImNoYXJ0LXdyYXBwZXIiIHJlZj0ic2NhdHRlck1hcCI+PC9kaXY+DQo="},{"version":3,"sources":["E:\\2023spring\\sci\\vue3-bigData\\src\\views\\homepage\\components\\scatterMap.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"E:/2023spring/sci/vue3-bigData/src/views/homepage/components/scatterMap.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\" ref=\"scatterMap\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts\";\r\nimport { onMounted, onBeforeUnmount, ref, reactive, watch } from \"vue\";\r\nimport { debounce, getGeoJson } from \"@/utils/index.js\";\r\nimport useResize from \"@/componentApi/useResize.js\";\r\nimport { selectCityData } from \"@/api/chart\";\r\n\r\nexport default {\r\n  name: \"scatterMap\",\r\n  setup() {\r\n    let {\r\n      abcode,\r\n      year,\r\n      parentInfo,\r\n      setCommitYear,\r\n      setCommitMapInfo,\r\n      setCommitSum,\r\n      removeCommitMapInfo,\r\n    } = useResize();\r\n\r\n    let myChart = ref(null);\r\n    let geoJson = ref(null);\r\n    const scatterMap = ref(null);\r\n    const timeData = reactive([2016, 2017, 2018, 2019, 2020]);\r\n\r\n    const resizeHandler = debounce(() => {\r\n      if (myChart) {\r\n        myChart.resize();\r\n      }\r\n    }, 200);\r\n\r\n    onMounted(() => {\r\n      getMapJson();\r\n      window.addEventListener(\"resize\", resizeHandler);\r\n    });\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    });\r\n\r\n    //通过高德获取geoJson数据\r\n    const getMapJson = async () => {\r\n      geoJson.value = await getGeoJson(abcode.value, geoJson.value);\r\n\r\n      getMapData();\r\n    };\r\n\r\n    //模拟接口，获取echarts数据\r\n    const getMapData = async () => {\r\n      let { data } = await selectCityData({\r\n        abcode: abcode.value,\r\n        year: year.value,\r\n      });\r\n\r\n      let sum = data.reduce((t, c) => t + parseFloat(c.value), 0);\r\n      setCommitSum(parseFloat(sum.toFixed(1)));\r\n\r\n      data = data.sort(function(a, b) {\r\n        return a.value - b.value;\r\n      });\r\n      initEcharts(data);\r\n    };\r\n\r\n    //渲染echarts图\r\n    const initEcharts = (data) => {\r\n      myChart = echarts.init(scatterMap.value || scatterMap);\r\n\r\n      if (parentInfo.value.length === 1) {\r\n        echarts.registerMap(\"china\", geoJson.value); //注册\r\n      } else {\r\n        echarts.registerMap(\"map\", geoJson.value); //注册\r\n      }\r\n      var min = parseFloat(data[0].value);\r\n      var max = parseFloat(data[data.length - 1].value);\r\n      if (data.length === 1) {\r\n        min = 0;\r\n      }\r\n\r\n      myChart.setOption(\r\n        {\r\n          timeline: {\r\n            data: timeData,\r\n            axisType: \"category\",\r\n            autoPlay: true,\r\n            playInterval: 8000,\r\n            left: \"10%\",\r\n            right: \"10%\",\r\n            bottom: \"0%\",\r\n            width: \"80%\",\r\n            label: {\r\n              normal: {\r\n                textStyle: {\r\n                  color: \"rgb(179, 239, 255)\",\r\n                },\r\n              },\r\n              emphasis: {\r\n                textStyle: {\r\n                  color: \"#fff\",\r\n                },\r\n              },\r\n            },\r\n            currentIndex: timeData.indexOf(year.value),\r\n            symbolSize: 10,\r\n            lineStyle: {\r\n              color: \"#8df4f4\",\r\n            },\r\n            checkpointStyle: {\r\n              borderColor: \"#8df4f4\",\r\n              color: \"#53D9FF\",\r\n              borderWidth: 2,\r\n            },\r\n            controlStyle: {\r\n              showNextBtn: true,\r\n              showPrevBtn: true,\r\n              normal: {\r\n                color: \"#53D9FF\",\r\n                borderColor: \"#53D9FF\",\r\n              },\r\n              emphasis: {\r\n                color: \"rgb(58,115,192)\",\r\n                borderColor: \"rgb(58,115,192)\",\r\n              },\r\n            },\r\n          },\r\n          baseOption: {\r\n            animation: true,\r\n            animationDuration: 900,\r\n            animationEasing: \"cubicInOut\",\r\n            animationDurationUpdate: 900,\r\n            animationEasingUpdate: \"cubicInOut\",\r\n\r\n            title: {\r\n              left: \"center\",\r\n              top: 0,\r\n              text:\r\n                year.value +\r\n                \"年\" +\r\n                parentInfo.value[parentInfo.value.length - 1].cityName +\r\n                \"销售额统计图\",\r\n              textStyle: {\r\n                color: \"rgb(179, 239, 255)\",\r\n                fontSize: 16,\r\n              },\r\n            },\r\n            tooltip: {\r\n              trigger: \"item\",\r\n              formatter: (p) => {\r\n                let val = p.value;\r\n                if (p.name == \"南海诸岛\") return;\r\n                if (window.isNaN(val)) {\r\n                  val = 0;\r\n                }\r\n                let txtCon =\r\n                  \"<div style='text-align:left'>\" +\r\n                  p.name +\r\n                  \":<br />销售额：\" +\r\n                  val.toFixed(2) +\r\n                  \"万</div>\";\r\n                return txtCon;\r\n              },\r\n            },\r\n            toolbox: {\r\n              feature: {\r\n                restore: {\r\n                  show: false,\r\n                },\r\n                dataView: {\r\n                  show: false,\r\n                },\r\n                saveAsImage: {\r\n                  name: \"销售额统计图\",\r\n                },\r\n                dataZoom: {\r\n                  show: false,\r\n                },\r\n                magicType: {\r\n                  show: false,\r\n                },\r\n              },\r\n              iconStyle: {\r\n                normal: {\r\n                  borderColor: \"#1990DA\",\r\n                },\r\n              },\r\n              top: 0,\r\n              right: 0,\r\n            },\r\n            visualMap: {\r\n              show: true,\r\n              min: min,\r\n              max: max,\r\n              left: \"0%\",\r\n              bottom: \"0%\",\r\n              calculable: true,\r\n              inRange: {\r\n                color: [\"#24CFF4\", \"#2E98CA\", \"#1E62AC\"],\r\n              },\r\n              textStyle: {\r\n                color: \"#24CFF4\",\r\n              },\r\n            },\r\n            series: [\r\n              {\r\n                name: year.value + \"销售额度\",\r\n                type: \"map\",\r\n                map: parentInfo.value.length === 1 ? \"china\" : \"map\",\r\n                roam: true,\r\n                zoom: 1.25,\r\n                tooltip: {\r\n                  trigger: \"item\",\r\n                  formatter: (p) => {\r\n                    let val = p.value;\r\n                    if (p.name == \"南海诸岛\") return;\r\n                    if (window.isNaN(val)) {\r\n                      val = 0;\r\n                    }\r\n                    let txtCon =\r\n                      \"<div style='text-align:left'>\" +\r\n                      p.name +\r\n                      \":<br />销售额：\" +\r\n                      val.toFixed(2) +\r\n                      \"万</div>\";\r\n                    return txtCon;\r\n                  },\r\n                },\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    color: \"rgb(249, 249, 249)\", //省份标签字体颜色\r\n                    formatter: (p) => {\r\n                      switch (p.name) {\r\n                        case \"内蒙古自治区\":\r\n                          p.name = \"内蒙古\";\r\n                          break;\r\n                        case \"西藏自治区\":\r\n                          p.name = \"西藏\";\r\n                          break;\r\n                        case \"新疆维吾尔自治区\":\r\n                          p.name = \"新疆\";\r\n                          break;\r\n                        case \"宁夏回族自治区\":\r\n                          p.name = \"宁夏\";\r\n                          break;\r\n                        case \"广西壮族自治区\":\r\n                          p.name = \"广西\";\r\n                          break;\r\n                        case \"香港特别行政区\":\r\n                          p.name = \"香港\";\r\n                          break;\r\n                        case \"澳门特别行政区\":\r\n                          p.name = \"澳门\";\r\n                          break;\r\n                        default:\r\n                          break;\r\n                      }\r\n                      return p.name;\r\n                    },\r\n                  },\r\n                  emphasis: {\r\n                    show: true,\r\n                    color: \"#f75a00\",\r\n                  },\r\n                },\r\n                itemStyle: {\r\n                  normal: {\r\n                    areaColor: \"#24CFF4\",\r\n                    borderColor: \"#53D9FF\",\r\n                    borderWidth: 1.3,\r\n                    shadowBlur: 15,\r\n                    shadowColor: \"rgb(58,115,192)\",\r\n                    shadowOffsetX: 7,\r\n                    shadowOffsetY: 6,\r\n                  },\r\n                  emphasis: {\r\n                    areaColor: \"#8dd7fc\",\r\n                    borderWidth: 1.6,\r\n                    shadowBlur: 25,\r\n                  },\r\n                },\r\n                data: data,\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        true\r\n      );\r\n\r\n      myChart.off(\"timelinechanged\");\r\n      myChart.on(\"timelinechanged\", (params) => {\r\n        const year = timeData[params.currentIndex];\r\n        setCommitYear(year);\r\n        getMapData();\r\n      });\r\n\r\n      myChart.getZr().off(\"click\");\r\n      myChart.getZr().on(\"click\", (params) => {\r\n        if (params.target) {\r\n          if (params.target.dataIndex) {\r\n            const index = params.target.dataIndex;\r\n            if (data[index]) {\r\n              if (\r\n                parentInfo.value[parentInfo.value.length - 1].code ==\r\n                data[index].adcode\r\n              ) {\r\n                return;\r\n              }\r\n              setCommitMapInfo({\r\n                cityName: data[index].name,\r\n                code: data[index].adcode,\r\n              });\r\n              getMapJson();\r\n            }\r\n          }\r\n        } else {\r\n          if (parentInfo.value.length === 1) {\r\n            return;\r\n          }\r\n          removeCommitMapInfo(parentInfo.value.length - 1);\r\n        }\r\n      });\r\n    };\r\n\r\n    watch(\r\n      parentInfo,\r\n      (nl, ol) => {\r\n        getMapJson();\r\n      },\r\n      { lazy: false, deep: true }\r\n    );\r\n\r\n    return {\r\n      scatterMap,\r\n      myChart,\r\n      parentInfo,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"]}]}